{"podcast_details": {"podcast_title": "The Python Show", "episode_title": "11 - YouTubing About Python with Mariya", "episode_image": "https://substackcdn.com/feed/podcast/1662473/42b412edaad14d1a02511e475d0f05a2.jpg", "episode_transcript": " Welcome to a brand new episode. Mike Driscoll, the Python Show. Hello and welcome to the Python Show. I'm your host, Mike Driscoll. And today we have a very special guest, Maria, from I believe her website is called, her YouTube channel is called Python Simplified. That's right. She has lots of cool content on there. Definitely check her out. And welcome to the show. Thank you so much, Mike. Super happy to be here. Thank you for inviting me. Yeah, it's great to have you. I usually ask all of my guests to just give us a little bit of their background story and tell us about your journey into programming. So if you could do that, that would be awesome. Sure. So my name is Maria. I'm a software developer from beautiful British Columbia, Canada. I have a Python channel, as you mentioned, called Python Simplified, where I teach computer science concepts and artificial intelligence using Python. My programming journey has started many, many years ago when I was 12, when I first got my internet connection, my broadband internet connection. I went, I had an investigative web. I've made some websites. And ever since, I'm learning new things. Right now, I'm learning a full blown degree in computer science in the University of London. I'm learning a machine learning and artificial intelligence specialization. So I'm taking it a bit more seriously than I did when I was 12. And yeah, here we are. That's awesome. So I've had a couple of other younger guests on my show, and I'm just curious, what are they teaching regarding computer science concepts? Are they teaching, what languages are they teaching? Are they teaching like test-driven development? You know, stuff about, what is it, source control, things like that? So not much about source control. This is something that you need to figure out on your own. But when it comes to programming languages, I find that specifically my university is mostly focusing on p5.js, which is a JavaScript library that helps you create interactive software very fast. It's all web applications. I don't believe it is widely used in a workplace, but they use it a lot in our modules. They also teach a little bit of Python. I don't like the way they teach them, but it's okay. I'm too picky when it comes to Python. When we are in the trade, we have certain things that bug us when they do them, as well as C++. They also teach it very well, actually. But maybe it's because my lecturer was very well for this specific module. So it depends on who you learn from. It does, yes. Awesome. So I'm just curious, if they're not teaching Python, or at least not teaching it the way you want, why did you choose to learn Python, and what are you using it for yourself? When I chose to learn Python, I didn't necessarily choose Python. I chose machine learning and artificial intelligence. And basically, Python was the best way to implement it. So I discovered Python absolutely by chance. Before I was familiar with JavaScript, I really liked it. But then as soon as you become familiar with Python, at least in terms of the aesthetics and in terms of the simplicity of the commands, you're kind of becoming addicted. And it's very hard for you to imagine different programming languages instead. Basically, my first, my best impression about Python at the very, very beginning was the indentations, the clever way of utilizing indentations to providing meaning to those indentations, which is something that we don't have in other programming languages. And I got very excited about it. I like the way it's organized. And from there, it just continued. I continued discovering new things. And every day, there's something new I find out. Yeah. Yeah. I found that I really liked that it enforces indentation. A lot of people don't like that. But when I was taking computer classes, like C++, the teacher or the professor was like, you need to indent your code, even though it's surrounded by braces, it needs to be indented to show that it's a block of code. And then you have people complaining that Python forces you to do that. And I'm like, what's the deal? You're taught to do that in school. Absolutely. Not only in school, just for yourself, in order to have a better understanding of where you stored things, just in terms of graphically looking at all the sophistication you have inside your code. It's much better to separate it with indentations. It doesn't matter the programming language you use. It's just far more organized and easier to detect specific details. We do it anyways. So we might as well utilize it in a clever way. Yeah. You can spot syntactical errors better if it's indented into blocks of code. It's a lot harder to tell where's the beginning and ending brace or curly brace or whatever if it's all on one line, for example. Yeah. I absolutely agree. So you're doing data science now and machine learning. Do you feel like if I'm just like a regular software developer and doesn't have a data science background, do you think I need to go back to school to get into data science or machine learning? I think that it becomes a more necessary skill as we go. But at this point of time, I don't think that it's the right time to throw everything and run back to school to relearn a bunch of concepts. I think that there's plenty of information online. So if it's something that people find interesting, there's so many sources, including my channel, including your Twitter account that you can actually refer to in order to learn new things when it comes to data science and when it comes to machine learning. I see it as something that takes time because it doesn't matter. Anything new you learn will take you time to master. And there is no need to rush. There's plenty of material, there's plenty of time. And as we go, we discover new things. So no rush whatsoever. But it is very important to learn data science when it comes to machine learning and artificial intelligence. These two fields are so closely connected together that anyone who ever wants to pursue a career in machine learning, deep learning, it's a necessity. We basically start with analyzing the data, looking at the data, and only then we figure out sophisticated mechanisms to process this data. So it's the beginning of every artificial intelligence journey, at least from my point of view. Yeah, that makes sense. Yeah, I've always thought that was kind of almost a gatekeeping in a way that you have to go and get a degree in data science to actually do data science. And I'm like, I don't really agree with that. But I'm always curious to see what people who are actually doing it think too. Sorry, Mike, can you repeat it? No, it's all good. I'm apologizing. I was just saying, I feel like people who think everyone has to get a data science degree to become a data science engineer. I think there's gatekeeping involved there. Because to me, it feels like a software engineer should be able to do that because they're already used to working with data to begin with. Absolutely. If I want to create an algorithm, then I probably have to go back to school because I don't know how to do that for machine learning. But if I don't need to create an algorithm, I'm pretty sure I can do the job. Anyway. For sure. And with time, if you look for other resources online and stuff, you'll be able to do it too, I have no doubts. Yeah. Cool. So I'm interested. How did you decide to become a YouTuber? I can't call it a decision. I was basically switching careers. I was a graphic designer for many, many years. I enjoyed it. I had lots of fun. But then I realized that I maximize myself at a certain spot. And I was looking for other ways. And then I was reading this article about Tesla's autopilot. And they mentioned that they're using machine learning technologies as in present progressive using now, not in the future. And this is how I discovered that artificial intelligence is no longer science fiction. So I thought, well, if I'm already looking for a new direction and there's something that I've always dreamed of learning and I'm capable of learning it nowadays, I have to go for it. So I basically decided that from now on, I want to change careers. I want to do something else. And I wanted to find an employment that will help me get better with it as I learn it. And that's where COVID hit. So basically, when I was looking to switch careers and become a junior developer, no one was hiring junior developers. And I thought that maybe starting my own YouTube channel will help me stand out. And yeah, I posted a few videos. People really, really enjoyed it. I discovered that people like the way I teach. And ever since, it all became history. I didn't really think it's going to be a business at a certain point of time. I thought it's just a way for me to capture attention with potential employers. And yeah, a lot of things have happened since. Oh, so it has worked out to do a full-time job, the YouTubing part of it. And instead of looking for jobs, I ended up developing this channel to the level that right now companies are reaching out to me and asking me if I'd like to work with them, not as an employee, but as a contractor. I have this product. I have this really, really good Python extension. Would you like to cover it in one of your videos? We can collaborate and things like that. So right now, I'm not really looking for work, but maybe sometimes in the future, who knows? Maybe one day I'd like to create a nice startup or something. All the options are open. That makes sense. Awesome. So what makes you think a YouTube channel is a good YouTube channel versus a bad YouTube channel? I don't really look at it in concepts of good or bad. I basically look at how genuine someone is. That's something that I find very, very important because everyone wants to be like those ultra-famous YouTubers that everyone sees. Everybody wants to be like Joe Rogan or like Mr. Beast, and everybody's trying to adapt the way they speak to the way that the famous YouTubers speak. And this is where I think a lot of YouTubers lose it because it's hard to compare someone who is first starting to use a camera to someone who is a professional and has been doing it for years. So instead of trying to be like somebody else, I think that a lot of YouTubers need to focus on being themselves. And it sounds like an easy task, but there's a big gap between speaking to your peers and colleagues and friends and speaking to a camera. Very, very big gap. I kind of discovered it the hard way, but you usually get better at what you do as time goes by. Another important detail is consistency. There are many YouTube channels that have a single viral video that many, many people watch, but it doesn't mean that all those people will subscribe because if they look at other pieces of content that the YouTuber does, it doesn't necessarily on the same level or on the same topic that they may find interesting. So for example, if somebody has a computer science channel, it is probably not wise to review the new vehicle that you just bought. Even though it might be a nice video, it might go viral, but your viewers may not appreciate it. So these are the two criteria that I find the most important to me at least. Yeah, that makes sense. Yeah. Okay. So what do you find are the top three data science topics that your viewers seem to like the best? So the first topic would definitely be web scraping and automation. That's something that my channel begun covering these topics. Actually viewers asked me specifically to cover mechanical soup and beautiful soup and all kinds of web scraping libraries. And ever since I discovered Selenium and it's very hard to use anything else since. So my channel is very oriented around automating XML sites as well as dynamic sites. And it's something that folks really appreciate. Another topic is database management systems, which is something that my viewers also really appreciate particularly in the realm of SQLite. It is a very, very nice and friendly system that is easily achievable with Python libraries. You don't need to set up anything. You just need a simple pip install command and not always because SQLite is installed with Anaconda already. So I found it very, very interesting. And yeah, I wish I could tell you machine learning and deep learning and things like that. But my audience doesn't find it particularly interesting. There is a fraction of the audience that is very, that is really engaged and really enjoys it. But I would say it's like 5% of people. Which to me is sad because this is what I'm mostly passionate about. So I wish that everyone would be excited about it just as much as I am. But there's nothing you can do. That's true. That's very true. You didn't mention Playwright. You might want to check that out for web scraping. That's kind of a newer library that I've heard a lot of people like to use now. I've heard a lot of recommendations about it. I did not try it myself. Yeah, I know someone who I think he works for Microsoft and he goes around to different conferences and talks about it. So it looks really slick. So it might be worth talking about someday. Especially if your viewers like that sort of thing. Yeah, absolutely. I did see it in the requests. But it's hard to follow all the requests. It's hard to know how many requests exactly from each topic there are. But I did see it popping in the comments. I definitely looked into it. Now that you recommended it as well. I happened to see a talk on it at PyCon this year. And it did look pretty good. All right. So we're getting close to my last question. Actually, we got the last question now. Wow. So do you have any advice? Do you have any advice for anyone who'd like to become a teacher on YouTube? Sure. So first of all, don't rush to invest in a lot of fancy equipment. Start with what you have. The only thing you realistically need is a working computer as well as a microphone that is semi-good. It doesn't have to be the fanciest microphone in the world. It doesn't have to have RGB on it. This is something you can buy along the way. Start slowly. Don't use the fanciest software and don't invest in too much equipment. Make sure that people enjoy what you are doing, the way you are teaching. And make sure that you understand what audience, your audience basically, because this is you're basically targeting them. You're not filming what you want to film. You are filming what will bring value to their life. So that should be your main goal. Another advice I have is don't just rely on some algorithms and on strangers on the internet to consume and promote your content. The first entities you should rely on is your family, is your friends, is your colleagues. So as soon as you have your very first video, as soon as you post it, the first thing you should do is you should reach out to all your contacts, all your loved ones. And tell them, hey, I have a new YouTube channel. Would you like to view this video? Would you like to tell me how you feel about it? Give me some feedback. I'd love to hear what you have to say. And maybe you can help me in whichever way you'd like. Maybe you can leave me a like. Maybe you can leave me a comment. Maybe you can share it with someone. And this would be your initial audience. This is how I basically started. Once you have at least the basic feedback and once you are comfortable with the editing, with filming, writing content and just viewing the camera, even if you don't have a camera, just speaking to the microphone, explaining things, then you can move on with advertising your videos elsewhere. So for example, a good source would be Facebook groups. Now I'm not on Facebook anymore. I used to be back in the day and I joined a very big group called Python, which is like 100% matched to what I do. Now they have, I believe, almost half a million members or something like that. But back in the day, they were a bit smaller. So this is where you can start sharing your content with others. And when you do so, don't just share your video. Explain people why this video is good, why this might help them and make a nice discussion about it. And then use the comment section to collect feedback from strangers because, you know, feedback from family and friends is not always objective. My mom thinks I'm the smartest person in the world, but it doesn't mean anything. I'm just her daughter. So she has to feel that way, right? And slowly, slowly progress towards the type of channels that you are used to see because you don't have to start from the top of the line. You usually start slow and your viewers will appreciate your progress as you go. Yeah, that's great advice. Thank you. I hope it helps. Yeah, I hope to see a bunch of great new YouTube stars, you know, commenting on this podcast and telling us a new channel. That'd be awesome. All right. Well, we made it through all of my questions. So I just want to thank you so much for putting up with me and my bad internet connection. It's all good. It's all good, Mike. I understood you without hearing half of it. Awesome. That's great. Thank you so much for the show. Hopefully the next time if I have you on again, I'll have a better connection for that. Absolutely. I'd love to come over again. Great. Anyway, y'all, all you listeners go and check out Maria's awesome channel and check her out and support her because she deserves it. All right. Thank you. I'm going to sign off now. Yeah. Thank you. We not only have voices for a podcast, but also faces for YouTube. Don't miss your next episode. Mike Driscoll, the Python show."}, "podcast_summary": "In this podcast episode, the host, Mike Driscoll, interviews Maria, a software developer and YouTuber. Maria shares her background story and how she transitioned from being a graphic designer to programming and machine learning. She discusses the importance of Python in artificial intelligence and her passion for teaching computer science concepts through her YouTube channel, Python Simplified. Maria also shares her advice for aspiring YouTubers and emphasizes the importance of being genuine and consistent in content creation. She mentions topics that are popular among her viewers, such as web scraping and automation, as well as database management systems like SQLite. Overall, this episode provides insights into Maria's journey as a developer and her experiences as a successful YouTuber.", "podcast_guest": "esting their guest info...:\n\nGuest name: Maria\nWebsite: Python Simplified (YouTube channel)\nLocation: British Columbia, Canada\nFocus: Teaching computer science concepts and artificial intelligence using Python", "podcast_highlights": "In this podcast episode, the host, Mike Driscoll, interviews Maria, a software developer and YouTuber from Canada. Maria runs a YouTube channel called Python Simplified, where she teaches computer science concepts and artificial intelligence using Python. Maria shares her background story and her journey into programming, which started at a young age. She discusses the programming languages taught in her university, including Python, JavaScript, and C++. Maria explains why she chose to learn Python and how it became her preferred language for machine learning and AI. She also talks about the importance of learning data science for machine learning and AI. When asked about her decision to become a YouTuber, Maria explains that it was a result of wanting to switch careers and the lack of job opportunities at the time. She started her channel as a way to stand out and capture the attention of potential employers. Over time, her channel grew and became a full-time job, with companies reaching out to collaborate with her. Maria shares her advice for aspiring YouTubers, including starting with minimal equipment, focusing on being genuine, understanding your audience, and promoting your content through personal networks and online communities. The episode concludes with a recommendation to check out Maria's YouTube channel, Python Simplified."}